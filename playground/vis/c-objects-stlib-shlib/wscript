#! /usr/bin/env python
# encoding: utf-8
# Jérôme Carretero, 2013 (zougloub)
# Robert Schuster, 2015: added visualization

"""
Demonstration for visualization of build dependencie on file level.
"""

APPNAME = 'TheProject'
VERSION = '1.0'

from waflib.extras import visualization

def options(opt):
	opt.load('compiler_c gnu_dirs')

def configure(ctx):
	ctx.load('compiler_c gnu_dirs')

	ctx.load('visualization')
	# show header files? default: True
	# can be disabled if number of header explodes
	#ctx.env.vis_show_implicit='False'

	# visualization JavaScript framework: jit or vis
	# jit: open BuildGraph/Jit201/waf_jit.html after build has completed
	ctx.env.vis_framework='jit'
	# vis: open BuildGraph/Vis/waf_vis.html after build has completed
	#ctx.env.vis_framework='vis'

	# use uniform shapes or different shapes for different types of ccroot-targets
	#ctx.env.vis_shape_flavor='uniform'
	ctx.env.vis_shape_flavor='mixed'

	# default: use generated colors for file extensions
	# OR use a specific color for all file types:
	#ctx.env.vis_default_color='#AA99BB'

def build(bld):
	bld.vis_registry=visualization.VisRegistry(bld)
	bld(
	 features='c',
	 source='test_shlib.c',
	 use='cshlib',
	 target='objects-for-shlib',
	)
	
	bld(
	 features='c',
	 source='test_stlib.c',
	 target='objects-for-stlib',
	)

	bld(
	 features='c cshlib',
	 target='something-shared',
	 vnum='1.2.3',
	 use='objects-for-shlib',
	)

	bld(
	 features='c cstlib',
	 target = 'something-static',
	 use='objects-for-stlib',
	)

	bld(
	 features='c cprogram',
	 target='exe-shared',
	 source='main.c',
	 use='something-shared',
	)
	
	bld(
	 features='c cprogram',
	 target='exe-static',
	 source='main.c',
	 use='something-static',
	)

	bld.add_post_fun(bld.vis_registry.visualize_nodes())
