NEW IN WAF 1.8.7
----------------
* Fixed the libdir suffix on Redhat 64-bit systems
* Enabled gccdeps to work with clang
* Fixed the detection of clang from the gcc tools
* Added orig_run_str to help subclasses (do not use Task.hcode)
* Fixed the detection of older clang compilers versions

NEW IN WAF 1.8.6
----------------
* Python file installation fixes
* Fix for classes containing utf-8 names
* Hide the progress bar when running waf -ppp
* Support more header extensions in subst/is_copy
* Handle non-string and non-list values in substitutions (subst)
* Show how to track build files timestamps to force partial rebuilds (build_file_tracker.py)
* Added a new extension to detect blender libraries
* Added extras/prefork.py, extras/preforkunix.py and extras/preforkjava.py
* Updated demos/d
* Updated demos/vala
* Updated playground/protobuf
* Updated playground/cython
* Updated playground/dynamic_headers
* Updated playground/netcache
* Qt5 detection improvements

NEW IN WAF 1.8.5
----------------
* Enhanced Sun compiler detection #1510
* Fixed a regression in Emacs shell support #1511
* Fixed a regression in cross-directory builds (Linux only) #1512
* Executable wscript files #1517
* Generic script signing utility #1520

NEW IN WAF 1.8.4
----------------
* Various improvements in stale.py
* More robust file scanning in Qt processing #1502
* More robust handling of build order implied by hidden dependencies #1506
* Run msvs on Python 3 #1503
* Biber update #1501
* Fixed the Python detection on Windows #1498

NEW IN WAF 1.8.2
----------------
* Removed the modules c_* that were accidentally shipped and break pkg-config tests

NEW IN WAF 1.8.1
----------------
* Re-added compatible option group names from waf 1.7 #1495
* Fixed bld(define='') splitting which was disabled by mistake

NEW IN WAF 1.8.0
----------------
* Python 2.5 is now required
* Removed the Waf cache from the task level, use the netcache system
* Console handling improvements
* Properly-sized progress bar on windows
* Generic configuration tests
* Better unicode handling in scripts and in file names
* Shorter build outputs
* Prevent external static libraries propagation through uselib vars #1320
* LaTeX glossaries #1342 and multibib #1345
* Rst document processing
* Various improvements in the Python detection and processing
* Tons of bugfixes

